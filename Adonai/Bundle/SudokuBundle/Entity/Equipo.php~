<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of Competencia
 *
 * @author jdsantana
 */

namespace Adonai\Bundle\SudokuBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface as UserInterface;

/**
 * Adonai\Bundle\SudokuBundle\Entity\Equipo
 *
 * @ORM\Table(name="Equipo")
 * @ORM\Entity
 */
class Equipo implements UserInterface, \Serializable {

  /**
   * @var integer $id
   *
   * @ORM\Column(name="id", type="integer", nullable=false)
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  private $id;

  /**
   * @var string $nombre
   *
   * @ORM\Column(name="nombre", type="string", nullable=true)
   */
  private $nombre;

  /**
   * @var string $usuario
   *
   * @ORM\Column(name="usuario", type="string", nullable=true)
   */
  private $usuario;

  /**
   * @var string $password
   *
   * @ORM\Column(name="password", type="text", nullable=false)
   */
  private $password;

  /**
   * Get id
   *
   * @return integer 
   */
  public function getId() {
    return $this->id;
  }

  /**
   * Set nombre
   *
   * @param string $nombre
   */
  public function setNombre($nombre) {
    $this->nombre = $nombre;
  }

  /**
   * Get nombre
   *
   * @return string 
   */
  public function getNombre() {
    return $this->nombre;
  }

  public function equals(UserInterface $user) {
    return $user->getId() == $this->id;
  }

  public function eraseCredentials() {
    
  }

  public function getPassword() {
    return $this->password;
  }

  public function getRoles() {
    return array('ROLE_TEAM');
  }

  public function getSalt() {
    
  }

  public function getUsername() {
    return $this->usuario;
  }

  public function serialize() {
    return serialize(array(
                $this->id,
                $this->nombre,
                $this->usuario,
                $this->password,
            ));
  }

  public function unserialize($serialized) {
    list(
            $this->id,
            $this->nombre,
            $this->usuario,
            $this->password,
            ) = unserialize($serialized);
  }

  /**
   * Set usuario
   *
   * @param string $usuario
   */
  public function setUsuario($usuario) {
    $this->usuario = $usuario;
  }

  /**
   * Get usuario
   *
   * @return string 
   */
  public function getUsuario() {
    return $this->usuario;
  }

  /**
   * Set password
   *
   * @param text $password
   */
  public function setPassword($password) {
    $this->password = $password;
  }

  public function __toString() {
    return $this->usuario;
  }

}